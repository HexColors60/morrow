---
- name: virtual
  fields:
    value:    # human-readable value to identify this object; used internally

- name: keywords
  fields:
    value: []   # Array of words a player may use to identify this Entity

# This holds other entities
- name: container
  fields:
    contents: []
    max_volume:

# location of the Entity; used in conjunction with the container component.  If
# location is going to change, this Entity must first be removed from the old
# entity's container contents list.
- name: location
  meta:
    save: false
  fields:
    value:

# This is viewable in world
- name: viewable
  fields:
    format:   # :room, :object, :character
    short:    # name, room title
    long:
    desc:     # character, item description viewable with look <entity>

# A list of exits from the current entity (room)
- name: exits
  fields:
    value: []

# where this entity goes; be it an exit, a portal
- name: destination
  fields:
    value:      # reference

# per-player configuration
- name: player_config
  fields:
    color: false
    coder: false
    compact: false
    send_go_ahead: false

# Used internally to help resolve references; the loaded component tracks as
# much detail as possible about where an Entity was loaded from.
- name: loaded
  fields:
    path:

# To denote something is closable/lockable and their current states
- name: closable
  fields:
    closable: true
    closed: true
    lockable: false
    locked: false
    key:

# To schedule the spawning of an entity in a room
- name: spawn_point
  fields:
    entity:   # reference to an entity by virtual
    active: 0 # number of active entities spawned from this point
    min: 1    # Minimum number to be present after spawning
    max: 1    # maximum number of entity that can be spawned by this point, and
              # still present in the world
    frequency: 300    # seconds between spawn events
    next_spawn: 0     # next time this spawn point will spawn

# is the spawn component attached to the entity being spawned, or the container
# in which it will be spawned?
#
# base:obj/bag
# base:obj/gold
# limbo:mob/puff
# midgaard:mob/guard
#
# What allows us to spawn:
# - base:obj/gold{currency: 1000} inside base:obj/bag on limbo:mob/puff
# - base:obj/gold{currency: 100} inside base:obj/bag on 1 of a dozen
#   midgaard:mob/guard



# command queue for characters
- name: command_queue
  fields:
    value:
    block_until:

# connection for players
- name: connection
  fields:
    value:

# Questionable

# affects on an entity
- name: affect
  unique: false
  fields:
    component:
    field:
    type:   # :set, :modify, :add
    value:
